[tool.poetry]
name = "discord-message-store-client"
version = "0.0.1"
description = "A Python client which passes on user information to the Discord Message Store server."
authors = ["Ayussh Verma <ayussh.verma@maersk.com>"]
license="MIT"
repository = "https://github.com/ayussh-verma/discord-message-store-client"
packages = [{include = "client"}]

[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "^3.10.5"
discord-py = "^2.4.0"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
ruff = "^0.6.7"
black = "^24.8.0"
isort = "^5.13.2"

[tool.ruff]
line-length = 99

[tool.ruff.lint]
select = [
    "ANN",  # flake8-annotations
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "E",  # pycodestyle - Error
    "F",  # pyflakes
    "ISC",  # flake8-implicit-str-concat
    "INT",  # flake8-gettext
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "T20",  # flake8-print
    "TID",  # flake8-tidy-imports
    "UP",  # pyupgrade
    "W"  # pycodestyle - Warning
]
ignore = [
    "D212",  # Multi-line docstring summary should start at the first line
    "ANN101",  # Missing type annotation for self in method
    "D203",  # 1 blank line required before class docstring
    "ANN401",  # Missing return type annotation for public function
    "D107",  # Missing docstring in __init__
    "D406",  # Section name should end with a newline
    "D407",  # Missing dashed underline after section
    "D413",  # Missing blank line after last section
    "D105",  # Missing docstring in magic method
]

[tool.isort]
order_by_type = false
case_sensitive = true
combine_as_imports = true
atomic = true

multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
ensure_newline_before_comments = true

[tool.black]
line-length = 99

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
